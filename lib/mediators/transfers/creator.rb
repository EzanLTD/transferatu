module Transferatu
  module Mediators::Transfers
    class Creator < Mediators::Base
      def initialize(group:, type:, from_url:, to_url:, options:)
        @group = group
        @type = type
        @from_url = from_url
        @to_url = to_url
        @options = options
      end

      def call
        # TODO: this is a really crufty way to handle autogenerated URLs
        if @type =~ /:gof3r$/
          if @to_url == 'auto'
            bucket = Config.s3_bucket_name
            key = "#{URI.encode(@group.name)}/#{Time.new.utc.iso8601}"
            @to_url = "https://#{bucket}.s3.amazonaws.com/#{key}"
          end
        end
        begin
          Transfer.create(group: @group, type: @type,
                          from_url: @from_url, to_url: @to_url,
                          options: @options)
        rescue StandardError => e
          puts e.inspect
        end
      end
    end
  end
end
